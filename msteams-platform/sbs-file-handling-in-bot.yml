### YamlMime:Tutorial
title: Upload file in Teams using bot
metadata:
  title: Upload file in Teams using bot 
  description: Learn how to upload files to Teams from a bot and how to receive a file sent to a bot as an attachment.
  audience: Developer
  level: Beginner
  ms.date: 28/12/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/bots-filesv4.md
  nextTutorialTitle: Read more on send and receive files through the bot
  ms.custom: mvc
  ms.localizationpriority: high
items:
- durationInMinutes: 1
  content: |
   The bot uses Microsoft Teams API to send and receive files with users in personal chats. The files shared in Teams can appear as cards and allow rich in-app viewing. The bot also helps in implementing features, such as expense reporting, image recognition, file archival, and e-signatures that involve editing the file content. 
   
   **Key features to upload file in Teams using bot**: 
   
     * Upload files to Teams using a bot.
     * Receive a file sent to bot as an attachment.
     * Fetch inline images sent in message.

   This step-by-step guide helps you to upload file in Teams using bot. You'll see the following output:

   :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png" alt-text="Screenshot shows the final output.":::
   
- title: Prerequisites
  durationInMinutes: 1 
  content: |
    Ensure you install the following tools and set up your development environment: 

     | &nbsp; | Install | For using... |
     | --- | --- | --- |
     | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams to collaborate with everyone you work with through apps for chat, meetings, and call all in one place.|
     | &nbsp; | [Visual Studio 2022](https://visualstudio.microsoft.com)<br> | You can install the enterprise version in Visual Studio 2022, and install the ASP.NET and web development workloads. Use the latest version. |
     | &nbsp; | Dev tunnel | Teams app features (conversational bots, message extensions, and incoming webhooks) need inbound connections. A tunnel connects your development system to Teams. Dev tunnel is a powerful tool to securely open your localhost to the internet and control who has access. Dev tunnel is available in Visual Studio 2022 version 17.7.0 or later. <br> or </br> You can also use [ngrok](https://ngrok.com/download) as a tunnel to connect your development system to Teams. It isn't required for apps that only include tabs. This package is installed within the project directory (using npm `devDependencies`). |
      > [!NOTE]
      > After downloading ngrok, sign up and install [authtoken](https://ngrok.com/download).

- title: Set up local environment
  durationInMinutes: 1
  content: |  

   [!INCLUDE [Set up local environment](includes/get-started/clone-repository.md)]

- title: Register Microsoft Entra app 
  durationInMinutes: 5
  content: |
    The following steps help you to create and register your bot in Azure portal:
    
    * Create and register your Azure app. 
    * Create client secret to enable SSO authentication of the bot.
    * Add Teams channel to deploy the bot.
    * Create a tunnel to your web server's endpoints using dev tunnel (recommended) or ngrok.
    * Add messaging endpoint to the dev tunnel that you created.

    [!INCLUDE [Azure app registration](includes/get-started/azure-app-registration.md)]

    **Create a tunnel**

      # [dev tunnel](#tab/dev)

      [!INCLUDE [Tunnel](includes/get-started/dev-tunnel.md)]

      # [ngrok](#tab/ngrok)
      
      [!INCLUDE [Tunnel](includes/get-started/ngrok-tunnel.md)]

      ---     

    [!INCLUDE [Azure web authentication](includes/get-started/azure-web-authentication.md)]
    
    [!INCLUDE [Client secret](includes/get-started/create-client-secret.md)]

    **Add API permissions**

    1. In the left pane, select **API permissions**. 

    1. Select **+ Add a permission**.

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/add-api-permission.png" alt-text="Screenshot shows the option to select Add permission.":::

    1. Select **Microsoft Graph**.

    1. Select **Delegated permissions**.

    1. Select **User** > **User.Read**.

    1. Select **Add permissions**.

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/select-api-permission.png" alt-text="Screenshot show the option to select permissions.":::

      > [!NOTE]
      >
      > * If an app isn't granted IT admin consent, users must provide consent the first time they use an app.
      > * Users need to consent to the API permissions only if the Microsoft Entra app is registered in a different tenant.


    [!INCLUDE [Application ID URI](includes/get-started/application-id-uri.md)]

    [!INCLUDE [Azure add scope](includes/get-started/azure-add-scope.md)]

    [!INCLUDE [Azure client application](includes/get-started/azure-client-application.md)]

    [!INCLUDE [Manifest](includes/get-started/azure-manifest.md)]

- title: Create your bot 
  durationInMinutes: 5
  content: |

    [!INCLUDE [Azure bot resource](includes/get-started/azure-bot-resource.md)]    

    [!INCLUDE [Teams channel](includes/get-started/add-teams-channel.md)]

    [!INCLUDE [Messaging endpoint](includes/get-started/messaging-endpoint.md)]

    [!INCLUDE [Service connection](includes/get-started/oauth-connection-settings.md)]

- title: Set up app settings and manifest files
  durationInMinutes: 2
  content: |
    1. Go to the **appsettings.json** file in the cloned repository.

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/appsettings-file-location.png" alt-text="Screenshot shows the selection of app settings json file.":::
                      
    1. Open the **appsettings.json** file and update the following information:

         * Set `"MicrosoftAppType"` to **MultiTenant**.
         * Set `"MicrosoftAppId"` to your bot's **Microsoft App ID**.
         * Set `"MicrosoftAppPassword"` to your bot's client secrets **Value**.
      
           :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/appsettings-json.png" alt-text="Screenshot shows the details filled app settings file in Visual Studio.":::
           
    1. Go to the **manifest.json** file in the cloned repository.

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/manifest-file-location.png" alt-text="Screenshot shows the selection of manifest json file.":::
         
    1. Open the **manifest.json** file and update the following changes:
    
       Replace all occurrences of `<<YOUR-MICROSOFT-APP-ID>>` with your **Microsoft App ID**.
 
       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/manifest-bot-id.png" alt-text="Screenshot shows the details filled manifest file in visual studio.":::

- title: Build and run the service
  durationInMinutes: 2
  content: |
     To build and run the service using Visual Studio or Command line.

     # [Visual Studio](#tab/visualstudio)

       1. Open Visual Studio.
       
       1. Go to **File** > **Open** > **Project/Solution...**.

           :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/VS-file-open.png" alt-text="Screenshot shows the Project/Solution option in Visual studio.":::      
        
       1. From **samples** > **bot-file-upload** > **csharp** folder, select **TeamsFileUpload.csproj** file. 

           :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/project-file-location.png" alt-text="Screenshot shows the option to select sample folder.":::        

       1. From **View**, select **Solution Explorer**.

          :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/solution-explorer.png" alt-text="Screenshot shot show the View option to select Solution explorer.":::
          
       1. Press **F5** to run the project.
    
       1. Select **Yes** if the **Security Warning** dialog appears:

          :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/security-warning.png" alt-text="Screenshot shows the security warning certificate to accept.":::

          
          A webpage opens with a message **Your bot is ready!**.

          :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/file-bot.png" alt-text="Screenshot shows that your bot is ready.":::

       
 
     # [Command line](#tab/cli)

     Go to **Microsoft-Teams-Samples** > **samples** > **bot-file-upload** > **csharp** in Command Prompt window and enter the following command:

     ```bash
     dotnet run
     ```
   
     ![Dotnet](~/assets/images/teams-file-upload-bot/dotnet-run-command.png)

- title: Upload the bot in Teams
  durationInMinutes: 2
  content: | 
    1. In your cloned repository, go to **Microsoft-Teams-Samples** > **samples** > **bot-file-upload** > **csharp** > **TeamsAppManifest**.

    1. Create a .zip file with the following files that are present in the **TeamsAppManifest** folder:
       * manifest.json
       * icon-outline.png
       * icon-color.png 

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/manifest-zip-file-location.png" alt-text="Screenshot shows the app manifest folder.":::

    1. In the Teams client, select the **Apps** icon.

    1. Select **Manage your apps**.

    1. Select **Upload an app**.

    1. Look for the option to **Upload a custom app**. If you see the option, custom app upload is enabled.

       :::image type="content" source="assets/images/teams-file-upload-bot/custom-upload.png" alt-text="Screenshot shows the selection of Upload a custom app highlighted in red.":::

    1. Select the .zip file you've created in the **TeamsAppManifest** folder and select **Open**.

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/upload-manifest-zip.png" alt-text="Screenshot shows the option to upload the manifest zip file in Teams."::: 

    1. Select **Add**.

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/add-bot-file.png" alt-text="Screenshot show the option to upload the custom app in Teams."::: 

- title: Interacting with the bot in Teams
  durationInMinutes: 2
  content: |
    1. In the message compose area, enter **hi** and select **Send**. The bot sends an Adaptive card with the permission to upload the file.

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/respond-bot.png" alt-text="Screenshot show the responsive message with an adaptive card sent by bot.":::

    1. Select **Allow**. The **teams-logo.png** file is uploaded to the file directory and is ready for download.
         
       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/sbs-allow.png" alt-text="Screenshot shows the option to download the teams logo.":::
    
    1. Attach any file to your message and select **Send**. The bot responds with a message that the file is received and saved.

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/sbs-file.png" alt-text="Screenshot show the option to send a file to bot and a response is received.":::
   
       You can view the attachment from the **Files** tab.

    1. Attach an image to your message and select **Send**. The bot responds with a message that the image is received and saved.
       
       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/sbs-image.png" alt-text="Screenshot show the option to send an image to bot and a response is received.":::
      
       You can view the image on the chat window and from the **Files** tab.

        > [!NOTE]
        >  After the bot is installed in the personal scope, the user enters in a personal conversation with the bot.
      
- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with something like this?
    
    :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png" alt-text="Screenshot shows the output of desktop and mobile Teams application."::: 

- content: |
    You've completed the tutorial. Now you can upload files in Teams using a bot.
 
