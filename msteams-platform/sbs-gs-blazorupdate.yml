### YamlMime:Tutorial
title: Build your first app using Blazor
metadata:
  title: Hello World with Blazor
  description: In this tutorial, you'll learn to build Hello World app with Blazor, build interactive web UIs using C#, and create tab app and bot app. 
  audience: Developer
  level: Beginner
  ms.date: 04/03/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: toolkit/teams-toolkit-tutorial.md
  nextTutorialTitle: Teams app tutorials
  ms.custom: mvc
  ms.localizationpriority: high
items:
- durationInMinutes: 1
  content: |

    Blazor lets you build interactive web UIs using C#, instead of JavaScript. 
    
    You can create a tab app and a bot app with Blazor and the latest version of Visual Studio.

    :::image type="content" source="~/assets/images/teams-toolkit-v2/blazor/your-blazor-helloworld-app.png" alt-text="Screenshot of the blazor app displaying the tab, Bot, and Message Extension output after you've successfully completed the step-by-step guide.":::

    > [!NOTE]
    > Currently, Teams Toolkit doesn't support the message extension capability.

- title: Prerequisites
  durationInMinutes: 1
  content: |

    Here's a list of tools you require for building and deploying your app.

    | &nbsp;    | Install   | For using... |
    | --- | --- | --- |
    | &nbsp; | [Visual Studio 2022](https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=enterprise&ch=pre&rel=17)| You can install the enterprise version in Visual Studio 2022, and install the ASP.NET and web development workloads. Use the latest version. |
    | &nbsp; | [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/download-app) | Microsoft Teams to collaborate with everyone you work with through apps for chat, meetings, and call all in one place. |
    | &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (recommended) or [Google Chrome](https://www.google.com/chrome/) | A browser with developer tools. |
    | &nbsp; | Dev tunnel | Teams app features (conversational bots, message extensions, and incoming webhooks) need inbound connections. A tunnel connects your development system to Teams. Dev tunnel is a powerful tool to securely open your localhost to the internet and control who has access. Dev tunnel is available in Visual Studio 2022 version 17.7.0 or later. <br> or </br> You can also use [ngrok](https://ngrok.com/download) as a tunnel to connect your development system to Teams. It isn't required for apps that only include tabs. This package is installed within the project directory (using npm `devDependencies`).

    After you've installed the required tools, set up the development environment.

    ### Install Microsoft Teams Toolkit

    The Teams Toolkit helps simplify the development process with tools to provision and deploy cloud resources for your app, publish to the Microsoft Teams Store, and more.<br>
    You can use the toolkit with Visual Studio, or CLI (command-line interface) called `teamsfx`. 
    
    # [Visual Studio](#tab/vs)

    1. Download the latest version of Visual Studio.
    1. Open `vs_enterprise__3bed52501a604464b1eff2ce580fd4eb.exe` from your download folder.
    1. Select **Continue** in the **Visual Studio Installer** page to configure your installation.

       :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor/visual-studio-installer.png" alt-text="Screenshot of Visual Studio Installer with Continue option highlighted in red.":::  

    1. Select **ASP.NET and web development** under **Workloads**.

    1. Select **Microsoft Teams development tools** under **Installation details**.
       
    1. Select **Install**.

       :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs.install.png" alt-text="Screenshot of Visual Studio Enterprise Preview with the option Asp.NET and web development, Microsoft Teams development tools under installation details and install highlighted in red." lightbox="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs.install.png":::  
       
     Your Visual Studio is installed in a few minutes.
    
    # [Command line](#tab/cli)

    To install the TeamsFx CLI, use the `npm` package manager:

    ``` bash
    npm install -g @microsoft/teamsfx-cli
    ```

    Depending on your configuration, you may need to use `sudo` to install the CLI:

    ``` bash
    sudo npm install -g --unsafe-perm @microsoft/teamsfx-cli
    ```

    This condition is more common on Linux and macOS systems.

    Ensure you add the npm global cache to your PATH. This step is normally done as part of the Node.js installer.  

    You can use the CLI with the `teamsfx` command. Verify that the command is working by running `teamsfx -h`.

    > [!CAUTION]
    > Before you can run TeamsFx in PowerShell terminals, you must enable the remote signed execution policy for PowerShell.

    ---

    ## Set up your Teams development tenant

    A tenant is like a space or a container for your organization in Teams, where you chat, share files, and run meetings. This space is also where you upload and test your custom app. Let's verify if you're ready to develop with the tenant.

    ### Enable custom app upload

    After creating the app, you must load your app in Teams without distributing it. This process is known as custom app upload. Sign in to your Microsoft 365 account to view this option.
      
    1. In the Teams client, select **Apps** icon.
    1. Select **Manage your apps**.
    1. Select **Upload an app**.
    1. Look for the option to **Upload a custom app**. If you see the option, custom app upload is enabled.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png" alt-text="Screenshot shows the option to upload a custom app.":::

        > [!NOTE]
        > Contact Teams administrator, if you don't have the option to upload a custom app.

    ### Create a free Teams developer tenant (optional)

    If you don't have a Teams developer account, you can get it for free. Join the Microsoft 365 developer program!

    1. Go to the [Microsoft 365 developer program](https://developer.microsoft.com/microsoft-365/dev-program).
    1. Select **Join Now** and follow the onscreen instructions.
    1. In the welcome screen, select **Set up E5 subscription**.
    1. Set up your administrator account. After you finish, the following screen appears.

        :::image type="content" source="../msteams-platform/assets/images/build-your-first-app/dev-program-subscription.png" alt-text="Screenshot of Microsoft 365 Developer Program displaying your Microsoft 365 developer subscriptions.":::

    1. Sign in to Teams using the administrator account you just set up. Verify that you have the **Upload a custom app** option in Teams.

    ## Get a free Azure account

    If you wish to host your app or access resources in Azure, you must have an Azure subscription. [Create a free account](https://azure.microsoft.com/free/) before you begin.

    Now you've got all the tools to set up your account. Next, let's set up your development environment and start building! Select the app you want to create first.

- title: Create project workspace for your tab app
  durationInMinutes: 1
  content: |

    1. Open Visual Studio.

    1. Select **Create a new project**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-select-project.png" alt-text="Screenshot shows the Visual Studio with Create a new project option.":::

        The **Create a new project** page appears.

    1. In the search box, enter **Microsoft Teams**. From the search results, select **Microsoft Teams App**.

    1. Select **Next**.
 
        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-select-teams-app.png" alt-text="Screenshot shows to create a new project with Next option.":::
        
    1.  Enter **Project name** and select **Create**. 

         :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-new-project.png" alt-text="Screenshot shows to configure your new project with Create option.":::

    1.  Select the **Tab** as the capability for your app.

    1.  Select **Create**.    

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/select-tabapp.png" alt-text="Screenshot shows to create a new Teams application with Tab.":::
        
        Your Teams tab app is created in a few seconds.
        
        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor/vs-tab-app.png" alt-text="Screenshot of Visual Studio displaying tips to get started while building your app." lightbox="../msteams-platform/assets/images/teams-toolkit-v2/blazor/vs-tab-app.png":::
        

    <details>
    <summary>A quick recap of creating a Teams tab app.</summary>
    Watch this short recap for creating a Teams tab app.

    :::image type="content" source="~/assets/videos/blazorapp.gif" alt-text="Graphical representation shows the process of creating the Teams tab app.":::

    ## Take a tour of the source code for Teams tab app

    After project creation, you have the components to build a basic personal app. You can view the project directory structure in the **Solution Explorer** pane of the Visual Studio.

    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor/blazor-app-solution-explorer_1.png" alt-text="Screenshot of Solution explorer displaying the components to build a basic personal app.":::

    Teams Toolkit creates a scaffolding for your project based on the capabilities you selected. Among other files, Teams Toolkit maintains:

    | Folder name | Contents |
    | --- | --- |
    | App icons | The app icons are stored as PNG files in `color.png` and `outline.png`. |
    | `manifest.json` | App manifest (previously called Teams app manifest) for publishing through the Developer Portal for Teams is stored in `Properties/manifest.json`. |
    | `BackendController.cs` | A backend controller is provided in `Controllers/BackendController.cs` for assisting with authentication. |
    | `Pages/Tab.razor` | App manifest for publishing through the Developer Portal for Teams is stored in `Properties/manifest.json`. |
    | `TeamsFx.cs` and `JS/src/index.js` | The content is used for initializing communications with the Teams host. |
    
    You can add backend functionality by adding other ASP.NET Core controllers to your application.

- title: Build and run your first Teams tab app
  durationInMinutes: 1
  content: |
    After you set up your project workspace with Teams Toolkit, build your tab project.

    To build and run your app:

    1. Select **Project** > **Teams Toolkit** > **Prepare Teams App Dependencies**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-msteamsapp_1.png" alt-text="Screenshot of Visual Studio with Project, Teams Toolkit, and Prepare Teams App Dependencies options are highlighted in red." lightbox="../msteams-platform\assets\images\teams-toolkit-v2\blazor-vs-preview2\configure-msteamsapp_2.png":::

    1. Sign in to your **Microsoft 365 account** and then select **Continue**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/sign in M365 account.png" alt-text="Screenshot shows Microsoft 365 Account with Continue option.":::

    1. Select **Debug** > **Start Debugging** or select **F5**.

    1. If a **Security Warning** dialog appears, select **Yes**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/ssl-prompt.png" alt-text="Screenshot shows the security warning with Yes option.":::
        
    1. Select **Add** to install your app in Teams.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/blazortabapp.png" alt-text="Screenshot shows BlazorApp local debug.":::

       Congratulations, your first tab app is running in your local environment!

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/app-local.png" alt-text="Screenshot of Microsoft Teams with Your app is running in your local environment highlighted in red.":::

    1. To let your app retrieve user details using Microsoft Graph, select **Authorize**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/authorize-user-info.png" alt-text="Screenshot of Microsoft Teams with Authorize option highlighted in red.":::

    1. Select **Accept**.    

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/ms-graph-permission_1.png" alt-text="Screenshot of Permissions requested displaying the App info.":::

    1. Your photograph and details appear in your **Personal Tab**.
     
        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/tab-user-info.png" alt-text="Screenshot of your Personal Tab displaying basic information.":::

        You can do normal debugging activities, such as setting breakpoints, as if it were any other web application. The app supports hot reloading.  If you change any file within the project, the page will be reloaded.

    1. Stop debugging in Visual Studio.

- title: Preview your first Teams tab app
  durationInMinutes: 1
  content: |

    You've learned to create, build, and run Teams app with tab capability. The following final steps are to deploy your app on Azure and Preview in Teams:

    Let's deploy the first app with tab capability on Microsoft Azure using Teams Toolkit.

    #### **To provision your tab app in Azure**
    
    1. Select **Project** > **Teams Toolkit** > **Provision in the Cloud**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-build-provision_1.png" alt-text="Screenshot of Visual Studio with Project, Teams Toolkit, and Provision in the Cloud options are highlighted in red." lightbox="../msteams-platform\assets\images\teams-toolkit-v2\blazor-vs-preview2\vs-build-provision_2.png":::

    1. Enter the subscription and resource group details in the **Provision** dialog:

       1. Select your **Subscription name** from the dropdown list.
       1. Select your **Resource group** from the dropdown list.
       1. If you don't have an existing resource group, you can create a new resource group. To create a new resource group, select **New** > enter the resource name > select **OK**. Select a location from the new resource group location dropdown list.
       1. Select **Provision**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/select-subscription.png" alt-text="Screenshot of Provision with New and Provision highlighted in red.":::

        A **Teams Toolkit** warning dialog appears. 

    1. Select **Provision**.
    
        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/provision-warning.png" alt-text="Screenshot of Teams Toolkit with Provision highlighted in red.":::

        It takes a few minutes for your resource group to provision in the cloud. 
        
    1. Select **OK**. 

         :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/provision-complete.png" alt-text="Screenshot of Teams Toolkit with OK option highlighted in red.":::

    1. Select **View Provisioned Resources** to view on Azure portal. 

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/view-resource.png" alt-text="Screenshot of Teams Toolkit with View Provisioned Resources highlighted in red.":::

    1. Sign in to your Azure portal. 

        Your app-dev-rg appears.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/app-dev-rg-azure.png" alt-text="Screenshot of Blazorapp-dev-rg displaying the Resources provisioned in the Azure portal." lightbox="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/app-dev-rg-azure.png":::

        Your resources are provisioned in the Azure portal.

    #### **To deploy your tab app to cloud**

    1. Select **Project** > **Teams Toolkit** > **Deploy to the Cloud...**.

         :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-build-deploytocloud_1.png" alt-text="Screenshot of Visual Studio with Project, Teams Toolkit, and Deploy to the Cloud options highlighted in red." lightbox="../msteams-platform\assets\images\teams-toolkit-v2\blazor-vs-preview2\vs-build-deploytocloud_2.png":::

    1. Select **OK**. 

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/deploy-success.png" alt-text="Screenshot shows Teams Toolkit with OK option.":::

        Your tab app is successfully deployed to the cloud!

    #### **To preview your tab app in Teams**    

    1. Select **Project** > **Teams Toolkit** > **Preview in Teams**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-build-preview_1.png" alt-text="Screenshot shows Visual Studio with Project, Teams Toolkit, and Preview in Teams options." lightbox="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-build-preview_1.png":::

    1. Select **Add**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/blazor-add-app.png" alt-text="Screenshot shows Teams displaying the Add option for adding Blazor app." lightbox="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/blazor-add-app.png":::

        Congratulations, your first tab app is running in your Azure environment!

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/blazor-tab-app-azure.png" alt-text="Screenshot of Microsoft Teams with Your app is running in your Azure environment highlighted in red.":::

    1. Select **Authorize** to let your app retrieve user details using Microsoft Graph.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/authorize-user-info.png" alt-text="Screenshot of Microsoft Teams with Authorize option under Personal Tab highlighted in red.":::

    1. Select **Accept**.  

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/ms-graph-permission_1.png" alt-text="Screenshot of Permissions requested displaying the App info.":::

        Your photograph and details appear in your **Personal Tab**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/azure-user-info.png" alt-text="Screenshot of your Personal Tab displaying basic information.":::

- title: Create project workspace for your bot app
  durationInMinutes: 1
  content: |
    Start Teams app development by creating your first app. This app uses the bot capability.
    
    :::image type="content" source="~/assets/images/teams-toolkit-v2/blazor/your-helloworld-app-bot.png" alt-text="Screenshot displaying workspace for your bot app.":::    

    ## Create your bot project
    
    1. Open Visual Studio.

    1. Select **Create a new project**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-select-project.png" alt-text="Screenshot shows Visual Studio 2022 with Create a new project.":::

        The **Create a new project** page appears.

    1. In the search box, enter **Microsoft Teams**. From the search results, select **Microsoft Teams App**.

    1. Select **Next**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor/vs-select-teams-app.png" alt-text="Screenshot shows Create a new project with Next option.":::

          The **Configure your new project** window appears.

    1.  Enter **Project name** and select **Create**.
        
         :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-new-project-bot.png" alt-text="Screenshot of Configure your new project with Create option highlighted in red.":::

          The **Create a new Teams application** window appears.  

    1.  Select Teams app feature. 

    1.  Select the **Command Bot** app as the capability for your app.

    1. Select **Create**.     

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/select-bot_1.png" alt-text="Screenshot of Create a new Teams application with Command Bot and Create options highlighted in red.":::

        Your Teams bot app is created in a few seconds.
        
        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-bot-app-team_1.png" alt-text="Screenshot of Visual Studio displaying the information of getting started with Teams Toolkit." lightbox="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-bot-app-team_1.png":::
        

    <details>
    <summary>A quick recap of creating a Teams bot app.</summary>
    Watch this short recap for creating a Teams bot app.

    :::image type="content" source="~/assets/videos/botapp.gif" alt-text="Graphical representation shows the process of creating the  jTeams bot app.":::

    ## Take a tour of the source code for Teams bot app

    After project creation, you have the components to build a basic personal app. You can view the project directory structure in the **Solution Explorer** area of the latest Visual Studio.

    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor/blazor-appbot-solution-explorer_1.png" alt-text="Screenshot of Solution Explorer with BlazorApp highlighted.":::

    Teams Toolkit creates a scaffolding for your project based on the capabilities you selected. Among other files, Teams Toolkit maintains:

    | Folder name | Contents |
    | --- | --- |
    | App icons | The app icons are stored as PNG files in `color.png` and `outline.png`. |
    | `manifest.json` | The app manifest for publishing through the Developer Portal for Teams is stored in `Properties/manifest.json`. |
    | `BackendController.cs` | A backend controller is provided in `Controllers/BackendController.cs` for assisting with authentication. |
    | `TeamsFx.cs` and `JS/src/index.js` | The content is used for initializing communications with the Teams host. |
    
    You can add backend functionality by adding other ASP.NET Core controllers to your application.

- title: Build and run your first bot app
  durationInMinutes: 1
  content: |

    To build and run your app locally:

    **Create a tunnel**

      # [dev tunnel](#tab/dev)

      [!INCLUDE [Tunnel](includes/get-started/dev-tunnel.md)]

      # [ngrok](#tab/ngrok)
      
      [!INCLUDE [Tunnel](includes/get-started/ngrok-tunnel.md)]

      ---     

    1. Select **Project** > **Teams Toolkit** > **Prepare Teams App Dependencies**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-msteamsapp_1.png" alt-text="Screenshot of Visual Studio with project, Teams Toolkit, and Prepare Teams App Dependencies options highlighted in red." lightbox="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-msteamsapp_2.png":::

    1. Sign in to your **Microsoft 365 account** and then select **Continue**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/sign in M365 account.png" alt-text="Screenshot shows Microsoft 365 Account with Continue option.":::

    1. Select **Debug** > **Start Debugging** or select **F5** to run your app in debug mode.

    1. Select **Add**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/add-bot.png" alt-text="Screenshot of Teams displaying the Add option for adding Blazor app. The Add option is highlighted in red.":::

        Now the bot is successfully running on Teams! After the app is loaded, a chat session with the bot opens.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/bot-welcome.png" alt-text="Screenshot of Microsoft Teams with Welcome option highlighted under Suggestions.":::

        You can type `helloworld` to show an introduction card for an Adaptive Card.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/bot-running.png" alt-text="Screenshot of Microsoft Teams displaying an introduction card.":::       

         You can do normal debugging activities, such as setting breakpoints, as if it were any other web application. The app supports hot reloading.  If you change any file within the project, the page will be reloaded.
         
      <!-- markdownlint-disable MD033 -->
      <details>
      <summary>Learn how to troubleshoot if your app doesn't run locally.</summary>

      To successfully run your app in Teams, ensure that you've enabled custom app upload in your Teams account. You can learn more about custom app upload in the prerequisites section.

- title: Preview your first bot app
  durationInMinutes: 1
  content: |

    #### **To provision your bot app in Azure**
    
    1. Select **Project** > **Teams Toolkit** > **Provision in the Cloud**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/azure-app_1.png" alt-text="Screenshot of Visual Studio with project, Teams Toolkit, and Provision in the Cloud options highlighted in red." lightbox="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/azure-app_2.png":::

    1. Enter the subscription and resource group details in the **Provision** dialog:

        1. Select your **Subscription name** from the dropdown list.
        1. Select your **Resource group** from the dropdown list.
        1. If you don't have an existing resource group, you can create a new resource group. To create a new resource group, select **New** > enter the resource name > select **OK**. Select a location from new resource group location dropdown list.
        1. Select **Provision**.

           :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/provision-azure_1.png" alt-text="Screenshot of Provision with provision option highlighted in red. ":::

           A **Teams Toolkit** warning dialog appears. 

    1. Select **Provision**.

       :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/permission-azure.png" alt-text="Screenshot of Teams Toolkit with Provision highlighted in red.":::

       It takes a few minutes for your resource group to provision in the cloud.
        
    1. After the provision is complete, select **OK**. 
  
          :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/apppackage1-azure.png" alt-text="Screenshot of Teams Toolkit with OK option highlighted in red.":::

    1. Select **View Provisioned Resources** to view on Azure portal. 

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/view-resource-azure.png" alt-text="Screenshot of Teams Toolkit with View Provisioned Resources highlighted in red.":::

    1. Sign in to your Azure portal. 

        Your app-dev-rg appears.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/azure.png" alt-text="Screenshot of Blazorapp-dev-rg displaying the resources are provisioned in the Azure portal." lightbox="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/azure.png":::

        Your resources are provisioned in the Azure portal!

    #### **To deploy your bot app to cloud**

     1. Select **Project** > **Teams Toolkit** > **Deploy to the Cloud**.

          :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/deploy-to-cloud-azure_1.png" alt-text="Screenshot shows Visual Studio with Project, Teams Toolkit, and Deploy to the Cloud options highlighted in red." lightbox="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/deploy-to-cloud-azure_2.png":::

     1. Select **OK**. 

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/deploy-success.png" alt-text="Screenshot shows Teams Toolkit with OK option highlighted in red.":::

        Your bot app is successfully deployed to the cloud!

    #### **To preview your bot app in Teams** 

     1. Select **Project** > **Teams Toolkit** > **Preview in Teams**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/preview-azure_1.png" alt-text="Screenshot shows Visual Studio with Project, Teams Toolkit and Preview in Teams options." lightbox="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/preview-azure_2.png":::

     1. Select **Add**.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/add-app-azure.png" alt-text="Screenshot shows Teams displaying the Add option for adding Blazor app.":::

        Now the bot is successfully running on Teams! After the app is loaded, a chat session with the bot opens.
 
         :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/welcome.png" alt-text="Screenshot of Microsoft Teams displaying an introduction card.":::

     1. You can type `helloworld` to show an introduction card for an Adaptive Card.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/learn.png" alt-text="Screenshot of Microsoft Teams displaying the Learn Adaptive Card and Commands.":::

- title: Congratulations!
  durationInMinutes: 1
  content: |

    You've done it!

    You've created two apps, each with a different capability: a tab app and a bot app.

    You've completed the tutorial to build apps with Blazor.
