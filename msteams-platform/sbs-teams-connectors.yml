### YamlMime:Tutorial
title: Build Teams connectors
metadata:
  title: Build Teams connectors
  description: In this module, learn how to configure and test a Connector for Microsoft Teams app.
  audience: Developer
  level: Beginner
  ms.date: 02/14/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: webhooks-and-connectors/how-to/connectors-creating.md
  nextTutorialTitle: Read more on Webhooks and Connectors
  ms.custom: mvc
  ms.localizationpriority: null
items:
- durationInMinutes: 1
  content: |
    Microsoft Teams connector is Model-View-Controller (MVC) sample task management application and generated using the ASP.NET web application template. Most of the code is related to either basic MVC configuration or task management system. You can add your existing connector for Microsoft 365 Groups or build a new one within Teams.
    
    **Types of connector codes**

      * **ConnectorController.cs**: Set up and save actions.
      * **TaskController.cs**: Create and update actions.
      
    **Key features of Microsoft Teams connector**

      * Simulates real task management system.
      * Allows users to create and view tasks.
      * Generates content randomly. 
      * Simulates notification to be sent to Microsoft Teams channel. 
    
    This step-by-step guide helps you to create and test a connector in Microsoft Teams. You'll see the following output:
       
    :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/mobile.png" alt-text="Screenshot of the build Team connector output after you have successfully completed the step-by-step guide.":::
       

- title: Prerequisites
  durationInMinutes: 1
  content: |
    Ensure that you install the following tools and set up your development environment: 

     | &nbsp; | Install | For using... |
     | --- | --- | --- |
     | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams to collaborate with everyone you work with through apps for chat, meetings, and calls all in one place.|
     | &nbsp; | [Visual Studio 2022](https://visualstudio.microsoft.com) | You can install the enterprise version in Visual Studio 2022, and install the ASP.NET and web development workloads. Use the latest version.|
     | &nbsp; | [.NET Core SDK](https://dotnet.microsoft.com/en-us/download) | Customized bindings for local debugging and Azure Functions app deployments. Use the latest version or install the portable version.|
     | &nbsp; | Dev tunnel | Teams app features (conversational bots, message extensions, and incoming webhooks) need inbound connections. A tunnel connects your development system to Teams. Dev tunnel is a powerful tool to securely open your localhost to the internet and control who has access. Dev tunnel is available in Visual Studio 2022 version 17.7.0 or later. <br> or </br> You can also use [ngrok](https://ngrok.com/download) as a tunnel to connect your development system to Teams. It isn't required for apps that only include tabs. This package is installed within the project directory (using npm `devDependencies`). |
   
      > [!NOTE]
      > After downloading ngrok, sign up and install [authtoken](https://ngrok.com/download).

- title: Set up local environment
  durationInMinutes: 1
  content: |  

    [!INCLUDE [Set up local environment](includes/get-started/clone-repository.md)] 

- title: Enable developer preview
  durationInMinutes: 1
  content: |

    1. Enable uploading of apps in the admin console of your tenant.
        1. Sign in to [Microsoft 365 admin center](https://admin.microsoft.com/Adminportal/Home?source=applauncher#/homepage#/) with your admin credentials.
        1. In the left pane, select **Show All**.
        1. Select **Teams**.
 
           :::image type="content" source="./assets/images/meeting-token-generator/meeting-token-generator-admincenter-1.png" alt-text="Screenshot of Admin centers with Teams option highlighted in red.":::

    1.  In the left pane, select **Teams apps**.
       
    1.  Select **Setup policies**.
 
           :::image type="content" source="~/assets/images/meeting-token-generator/meeting-token-generator-setuppolicies-1.png" alt-text="Screenshot of Microsoft Teams admin center with Teams apps and Setup policies highlighted in red.":::
   
    1.  Select **Global (Org-wide default)**.

          :::image type="content" source="~/assets/images/sbs-connector/Global-1.png" alt-text="Screenshot of App setup policies with Global Org-wide default highlighted in red.":::

    1.   Turn on the **Upload custom apps** toggle.

          :::image type="content" source="~/assets/images/meeting-token-generator/meeting-token-generator-toggle-on-connectors.png" alt-text="Screenshot of Global Org-wide default with Upload custom apps showing the toggle button on and highlighted in red.":::
   
    1.   Select **Save**.
       
          Your test tenant can now permit custom app upload.

          > [!TIP]
          > Custom app upload takes some time to become active.

    1.   Go to **Microsoft Teams**.
    
    1.   From the upper-right corner of your Teams, select **...**.
    
    1.   Select **About** > **Developer preview**.

          :::image type="content" source="~/assets/images/meeting-token-generator/meeting-token-generator-devpreview-enable.png" alt-text="Screenshot shows the dropdown list with about and developer preview options.":::
   
    1.   Select **Switch to developer preview**.
   

- title: Configure your connector
  durationInMinutes: 1
  content: | 

   1. Open **TeamsToDoAppconnector.sln** in Visual Studio from the cloned repository.

       :::image type="content" source="~/assets/images/sbs-connector/sln-1.png" alt-text="Screenshot of cloned repository with TeamsToDoAppConnector.sln highlighted in red.":::

      **Create a tunnel**

        # [dev tunnel](#tab/dev)

        [!INCLUDE [Tunnel](includes/get-started/dev-tunnel.md)]

        # [ngrok](#tab/ngrok)
        
        [!INCLUDE [Tunnel](includes/get-started/ngrok-tunnel.md)]

    1. Go to [Connector Developer Portal](https://outlook.office.com/connectors/publish).
    1. Select **New Connector**.
     
       :::image type="content" source="~/assets/images/sbs-connector/connector-new.png" alt-text="Screenshot of Connectors Developer Dashboard with +New Connector highlighted in red.":::
      
    1. Enter the following details to register a new connector:

       * **Connector name**.
       * **Logo**
       * **Short description of your app (10 words or less)**.
       * **Detailed description of what your Connector does (3-5 sentences)**.
       * **Company website**.
       * **Configuration page for your Connector** as `https://[BASE_URI]/connector/setup`.
       * Set **Valid domains** as `https>//[Base URI]`.
       * Select **Yes** to enable the action on Connector cards.
       * Set **Actions URL** as `https://[BASE_URI]/Task/Update`.
       * Select **I accept the terms and conditions of the App Developer Agreement**.
       * Select **Save**.

       :::image type="content" source="~/assets/images/sbs-connector/basicdetails-1.png" alt-text="Screenshot of Connectors Developer Dashboard with Save option highlighted in red.":::

       You've successfully registered a new connector. The window appears with the registered connector ID.

       :::image type="content" source="~/assets/images/sbs-connector/output-1.png" alt-text="Screenshot of Connectors Developer Dashboard displaying the details of new connector successfully being registered.":::
      
       > [!TIP]
       > Save the Connector ID for future reference.

    1. Open the **TeamsToDoAppConnector.csproj** file from the cloned repository.

       :::image type="content" source="~/assets/images/sbs-connector/web-1.png" alt-text="Screenshot of cloned repository with TeamsToDoAppConnector.csproj highlighted in red."::: 

    1. In your cloned repository, go to **Microsoft-Teams-Samples** > **samples** > **connector-todo-notification** > **csharp**.
    
    1. Open the **appsettings.json** file in Visual Studio and do the following updates. 

         * Replace the `BASE_URL` with `ngork URL` or `dev tunnel URL`.
         * Replace `CONNECTOR_ID` with the connector ID created.
       
       :::image type="content" source="~/assets/images/sbs-connector/manifest-1.png" alt-text="Screenshot of Visual Studio with BaseUrl and connector ID highlighted in red after the replacement of required information."::: 
    
    1. In your cloned repository, go to **Microsoft-Teams-Samples** > **samples** > **connector-todo-notification** > **csharp** > **TeamsAppPackages**.
    
    1. Open the **manifest.json** file in Visual Studio and make the following changes:

         * Replace `CONNECTOR_ID` with the connector ID created.
         * Replace `VALID-DOMAIN` to your ngrok OR dev tunnel domain excluding https://.

            :::image type="content" source="~/assets/images/sbs-connector/manifest-2.png" alt-text="Screenshot of Visual Studio with connector ID and valid domain highlighted in red after the required updates."::: 
    
    1. Press **F5** to run the project.
       A web page opens. 

       :::image type="content" source="~/assets/images/sbs-connector/local-host.png" alt-text="Screenshot of Teams ToDo App displaying the details of tasks.":::   

- title: Test connector in Microsoft Teams
  durationInMinutes: 5
  content: |

    1. Create a .zip file with the following files that are present in the **Manifest** folder: 
         * manifest.json
         * outline-icon.png
         * color-icon.png

            :::image type="content" source="~/assets/images/sbs-connector/zip-1.png" alt-text="Screenshot of Manifest folder with Teams connector highlighted in red.":::

    1. Go to **Microsoft Teams**.
         1. In the left pane, select the **Apps** icon.
         1. Select **Manage your apps**.
         1. Select **Upload an app**.
         1. Look for the option to **Upload a custom app**.
 
            :::image type="content" source="~/assets/images/sbs-connector/upload-a-custom-app.png" alt-text="Screenshot shows the option to upload a custom app.":::
      
    1. Select the .zip file that you created in the **Manifest** folder and select **Open**.

       :::image type="content" source="~/assets/images/sbs-connector/open-1.png" alt-text="Screenshot of TeamsAppPackages folder with Teams connector zip file highlighted in red.":::

    1. Select **Add to a team**.

       :::image type="content" source="~/assets/images/sbs-connector/addtoteam-1.png" alt-text="Screenshot of TeamsTodo Connector in .NET/C# with Add to a team highlighted in red.":::

    1. Select the team or channel name from the list.

       :::image type="content" source="~/assets/images/sbs-connector/channel-1.png" alt-text="Screenshot of TeamsTodo Connector in .NET/C# to a team with Type a team or channel name highlighted in red.":::

    1. Select **Set up a connector**.

    1. In the left pane, search **Teams ToDo** connector in the search bar and select **Configure**.

       :::image type="content" source="~/assets/images/sbs-connector/configure-1.png" alt-text="Screenshot of Connectors for General channel in Demo team with TeamsToDo and Configure highlighted in red.":::

    1. Select either **Created** or **Updated** on the registration page and select **Save**.

       :::image type="content" source="~/assets/images/sbs-connector/create-1.png" alt-text="Screenshot of TeamsTodo Connector in .NET/C# with Save option highlighted in red.":::

       After configuration, you can see notification in channel with link to **Task Manager Portal**.

       :::image type="content" source="~/assets/images/sbs-connector/notification.png" alt-text="Screenshot of Teams ToDo Notification Inline Config displaying the confirmation of Teams ToDo Notification In-line Config set up details.":::

    1. Go to **Task Manager Portal**.

        :::image type="content" source="~/assets/images/sbs-connector/taskportal-1.png" alt-text="Screenshot of Teams ToDo Notification-Inline Config with Task Manager Portal highlighted in red.":::

    1. Select **Create New**.
       
        :::image type="content" source="~/assets/images/sbs-connector/tasks-1.png" alt-text="Screenshot of Teams ToDo App with Create New option highlighted in red.":::
       
    1. Enter the new task details:

        * **Title**
        * **Description**
        * **Assign To**

        :::image type="content" source="~/assets/images/sbs-connector/details-1.png" alt-text="Screenshot of Teams ToDo App displaying the new task details.":::

    1. Select **Save**. 
      
        The message card appears in the registered Teams channel.
       
        :::image type="content" source="~/assets/images/sbs-connector/messagecard.png" alt-text="Screenshot of Teams ToDo Notification-Inline Config displaying the details of task created.":::

        > [!TIP]
        > You can try the actionable buttons available on the message card.

- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with something like this?

    :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/mobile.png" alt-text="Screenshot of the build Team connector output after you have successfully completed the step-by-step guide.":::

- content: |
    You've completed the tutorial to get started with **Microsoft Teams connectors**!


