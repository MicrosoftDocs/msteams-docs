### YamlMime:Tutorial
title: Build a custom copilot to chat with your data using Teams AI library and Teams Toolkit
metadata:
  title: Tutorial - Build Custom Copilot
  description: Learn how to create a custom copilot using Teams AI library and Teams Toolkit, set up data in Azure OpenAI, and configure custom copilot.
  audience: Developer
  level: Beginner
  ms.date: 29/04/2024
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/Teams conversational AI/teams-conversation-ai-overview.md
  nextTutorialTitle: Back to Teams AI library
  ms.custom: mvc
  ms.localizationpriority: high
items:
- durationInMinutes: 1
  content: |

    This tutorial shows how to create a custom copilot with Teams AI library using Teams Toolkit to chat with your data on Azure OpenAI. Teams AI library streamlines the process of building intelligent Teams apps by using the AI components and Large Language Models (LLMs) of your choice.

    In this tutorial, you'll learn:

    * How to setup your data on Azure OpenAI.
    * How to create a new custom copilot with Teams Toolkit.
    * How to interact with your LLMs and data.
    * The directory structure of your custom copilot.


- title: Prerequisites
  durationInMinutes: 1
  content: |
   Ensure you install the following tools for building and deploying your apps:

   | &nbsp; | Install | For using... |
   | --- | --- | --- |
   | &nbsp; | [Teams Toolkit](~/toolkit/install-Teams-Toolkit.md) | A Microsoft Visual Studio Code extension that creates a project scaffolding for your app. Use the latest version. |
   | &nbsp; | [Node.js and NPM](https://nodejs.org/) | Back-end JavaScript runtime environment. For more information, see [Node.js version compatibility table for project type](~/toolkit/build-environments.md#nodejs-version-compatibility-table-for-project-type).|
   | &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (recommended) or [Google Chrome](https://www.google.com/chrome/) | A browser with developer tools. |
   | &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript, TypeScript, or SharePoint Framework (SPFx) build environments. Use the latest version. |
   | &nbsp; | [Azure OpenAI](https://oai.azure.com/portal)| First create your OpenAI API key to use OpenAI's GPT. If you want to host your app or access resources in Azure, you must create an Azure OpenAI service.|

- title: Setup your data on Azure OpenAI
  durationInMinutes: 1
  content: | 
     1. Go to [**Azure portal**](https://ms.portal.azure.com/).

     1. Select the Azure OpenAI service that you created in the prerequisite.

     1. Select **Go to Azure OpenAI Studio**.
        
        :::image type="content" source="../msteams-platform/assets/images/bots/go-to-azure-openai-studio.png" alt-text="Screenshot shows the go to Azure OpenAI studio in Azure portal.":::

     1. Select **Chat** > **Create new deployment**.
        
        Update the values for the following fields:

        * **Select a model**: gpt-35-turbo
        * **Model version**: Autoupdate to default
        * **Deployment type**: Standard
        * **Deployment name**: gpt-35-turbo
        * **Content Filter**: default

     1. Select **Create**.

        :::image type="content" source="../msteams-platform/assets/images/bots/deploy-model.png" alt-text="Screenshot shows the new deploy model in Azure portal.":::     

     1. Select **Chat** > **Add a data source**.
     
     1. From the dropdown, select **Upload files (preview)**.

     1. Select **Create a new Azure Blob storage resource** and follow the onscreen instructions.
     
     1. Select **Create a new Azure AI Search resource** and follow the onscreen instructions.
     
     1. Select the newly created Azure Blob storage and Azure AI Search from the dropdown.
     
        > [!NOTE]
        > Save **Azure AI Search endpoint** and **key** details as they're necessary for the subsequent steps.

     1. Enter a unique **index name** and select **Next**.

        :::image type="content" source="../msteams-platform/assets/images/bots/nba.png" alt-text="Screenshot shows how to create data source in Azure portal.":::

     1. Select **Browse for a file** and upload files you prefer to use as your data, then select **Upload files**.

         > [!NOTE]
         > Files must be in `.txt`, `.md`, `.html`, `.pdf`, `.docx`, or `.pptx` format with 16 MB size limit.

     1. Select the **Data management** settings as default and select **Next**.
     
     1. Select **Save and close**.

     After the data ingestion process is complete, you can start creating your custom copilot using the Teams AI library and Teams Toolkit.
 

- title: Create your custom copilot
  durationInMinutes: 1
  content: |

     1. Go to **Visual Studio Code**.

     1. Select the Teams Toolkit :::image type="icon" source="../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png"::: icon in the Visual Studio Code Activity Bar.

     1. Select **Create a New App**.

        :::image type="content" source="../msteams-platform/assets/images/bots/create-a-new-app.png" alt-text="Screenshot shows how to create a new app in Visual Studio Code.":::     

     1. Select **Custom Copilot**.

        :::image type="content" source="../msteams-platform/assets/images/bots/custom-copilot.png" alt-text="Screenshot shows custom copilot option in Visual Studio Code.":::

     1. Select **Basic AI Chatbot**.

        :::image type="content" source="../msteams-platform/assets/images/bots/basic-ai-chatbot.png" alt-text="Screenshot shows basic ai chatbot in Visual Studio Code.":::

     1. Select **JavaScript** as the programming language.

        :::image type="content" source="../msteams-platform/assets/images/bots/programming-language.png" alt-text="Screenshot shows programming language in Visual Studio Code.":::     

     1. Select **Azure OpenAI**.

        :::image type="content" source="../msteams-platform/assets/images/bots/large-language-model.png" alt-text="Screenshot shows LLM in Visual Studio Code.":::     

     1. Enter the values from the Azure portal:
     
         * **Azure OpenAI key**

         * **Azure OpenAI endpoint**

         * **Deployment name**

     1. Alternatively, you can fill in these details later in the `env/.env.testtool.user` file once your custom copilot is created.

     1. Select a folder that contains the root folder of your project and enter a suitable name for your custom copilot.
     
     1. Select **Enter**. Custom copilot is created in a few seconds.

     ## Take a tour of the source code

     Have a look at what's inside this custom copilot > Basic AI Chatbot template.

     | Folder name | Contents |
     | --- | --- |
     | `.vscode` | VS Code files for debugging. |
     | `appPackage` | Templates for the Teams application manifest. |
     | `env` | Name or value pairs are stored in environment files and used by teamsapp.yml to customize the provisioning and deployment rules. |
     | `infra` | Templates for provisioning Azure resources. |
     | `src/`| The source code for the notification Teams application. |
     | `src/index.js`| Sets up the bot app server. |     
     | `src/adapter.js`| Sets up the bot adapter. |  
     | `src/config.js`| Defines the environment variables. |
     | `src/prompts/chat/skprompt.txt`| Defines the prompt. |
     | `src/prompts/chat/config.json`| Configures the prompt. |
     | `src/app/app.js`| Handles business logics for the Basic AI Chatbot. |
     | `teamsapp.yml` | Main project file describes your application configuration and defines the set of actions to run in each lifecycle stages. |
     | `teamsapp.local.yml` | This override `teamsapp.yml` with actions that enable local execution and debugging. |
     | `teamsapp.testtool.yml` | This override `teamsapp.yml` with actions that enable local execution and debugging in Teams App Test Tool.|

- title: Configure your custom copilot
  durationInMinutes: 1
  content: |

     Let's customize the prompt for your custom copilot.

     1. Go to `src/prompts/chat/skprompt.txt` and update the following code in `skprompt.txt` file:

        ```skprompt.txt
        The following is a conversation with an AI assistant, who is an expert on answering questions over the given context.
        Responses should be in a short journalistic style with no more than 80 words. 
        ```
        :::image type="content" source="../msteams-platform/assets/images/bots/prompts-chat.png" alt-text="Screenshot shows skprompt in explorer in Visual Studio Code.":::

     1. Go to the `config.json` file under `prompts/chat`. Add the following code inside the `completion` brackets and replace the `endpoint`, `index_name` and `key` values with your Azure AI Search resource details:

        ```json
           "data_sources": [
             {
                    "type": "azure_search",
                    "parameters": {
                         "endpoint": "AZURE-AI-SEARCH-ENDPOINT",
                         "index_name": "YOUR-INDEX_NAME",
                         "authentication": {
                               "type": "api_key",
                               "key": "AZURE-AI-SEARCH-KEY"
                           }
                     }
               }
             ]
        ```

     1. Go to `src/app/app.js` file and add the following variable inside `OpenAIModel`: 

        ```javascript
        azureApiVersion: '2024-02-15-preview'
        ```
 
     1. From the left pane, select **Run and Debug (Ctrl+Shift+D)**.

     1. Select **Debug in Test Tool (Preview)**.
     
     1. Select the **F5** key.   

        :::image type="content" source="../msteams-platform/assets/images/bots/debug-in-test-tool.png" alt-text="Screenshot shows the debug in test tool.":::

     1. Custom copilot runs within the Teams App Test Tool, which opens in your browser.

- title: Complete challenge
  durationInMinutes: 1
  content: |

   In the Teams App Test Tool, ask questions related to your document and chat with your custom copilot to learn more about your data.

    :::image type="content" source="../msteams-platform/assets/images/bots/teams-app-test-tool.png" alt-text="Screenshot shows the teams app test tool.":::

- title: Congratulations!
  durationInMinutes: 1
  content: |

   Congratulations, you completed this tutorial! If you're interested in learning more about the source code, visit [Azure OpenAI sample on Teams AI library GitHub repository.](https://github.com/microsoft/teams-ai/tree/main/js/samples/04.ai-apps/h.datasource-azureOpenAI)
