### YamlMime:Tutorial
title: Create Teams conversation bot
metadata:
  title: Create Teams conversation bot
  description: In this module, you can learn to create basic conversation bot in Microsoft Teams application.
  audience: Developer
  level: Beginner
  ms.date: 04/01/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/conversations/channel-and-group-conversations.md
  nextTutorialTitle: Channel and group chat conversations with a bot
  ms.custom: mvc
  ms.localizationpriority: null
items:
- durationInMinutes: 1
  content: |
    Microsoft Teams conversation bot allows users to interact with your web service through text, interactive cards, and dialogs (referred as task modules in TeamsJS v1.x). Basic conversations are handled through the Bot Framework connector, a single REST API. This API enables your bot to communicate with Teams and other channels. 
    
    **Key features of Bot Builder SDK**

    * Provides access to the Bot Framework connector.
    * Manages conversation flow and state.
    * Incorporates cognitive services, such as Natural Language Processing (NLP).

    When your bot is added to a group or a team, an introduction message is sent. The message provides a brief description of the bot's features and how to use them.
 
    This step-by-step guide helps you to create a conversation bot in the Teams application. You can see the following output:

    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="Screenshot shows the response from conversation bot."lightbox="assets/images/conversation-bot/final-output.png":::

- title: Prerequisites
  durationInMinutes: 1
  content: |
    Ensure that you install the following tools and set up your development environment:

    | &nbsp; | Install | For using... |
     | --- | --- | --- |
     | &nbsp; | [Microsoft 365 developer account](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Access to Teams account with the appropriate permissions to install an app. |
     | &nbsp; | [Visual Studio 2022](https://visualstudio.microsoft.com) | You can install the enterprise version in Visual Studio 2022, and install the ASP.NET and web development workloads. Use the latest version. |   
     | &nbsp; | [.NET Core SDK](https://dotnet.microsoft.com/en-us/download) | Customized bindings for local debugging and Azure Functions app deployments.  If you haven't installed the latest version, install the portable version. |
     | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams to collaborate with everyone you work with through apps for chat, meetings, and call all in one place |
     | &nbsp; | Dev tunnel | Teams app features (conversational bots, message extensions, and incoming webhooks) need inbound connections. A tunnel connects your development system to Teams. Dev tunnel is a powerful tool to securely open your localhost to the internet and control who has access. Dev tunnel is available in Visual Studio 2022 version 17.7.0 or later. <br> or </br> You can also use [ngrok](https://ngrok.com/download) as a tunnel to connect your development system to Teams. It isn't required for apps that only include tabs. This package is installed within the project directory (using npm `devDependencies`).|

      > [!NOTE]
      > After downloading ngrok, sign up and install [authtoken](https://ngrok.com/download).

- title: Set up local environment
  durationInMinutes: 1
  content: |  

   [!INCLUDE [Set up local environment](includes/get-started/clone-repository.md)]

- title: Register Microsoft Entra app
  durationInMinutes: 5
  content: |
    Register your bot with Azure Bot service when you develop and host it in Azure. Following are the steps:

    * Create and register your Azure app.
    * Create client secret that enables single sign-on (SSO) authentication of the bot.
    * Add Teams channel to deploy the bot.
    * Create a tunnel to your web server's endpoints using dev tunnel (recommended) or ngrok.
    * Add messaging endpoint to dev tunnel you created.

      [!INCLUDE [Azure app registration](includes/get-started/azure-app-registration.md)]

      **Create a tunnel**

      # [dev tunnel](#tab/dev)

      [!INCLUDE [Tunnel](includes/get-started/dev-tunnel.md)]

      # [ngrok](#tab/ngrok)
      
      [!INCLUDE [Tunnel](includes/get-started/ngrok-tunnel.md)]

      ---     
      [!INCLUDE [Azure web authentication](includes/get-started/azure-web-authentication.md)]

      [!INCLUDE [Client secret](includes/get-started/create-client-secret.md)]

    **Add API permissions**

    1. In the left pane, select **API permissions**. 

    1. Select **+ Add a permission**.

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/add-api-permission.png" alt-text="Screenshot shows the option to select Add permission.":::

    1. Select **Microsoft Graph**.

    1. Select **Application permissions**.

    1. Select **User** > **User.Read.All**.

    1. Select **Add permissions**.

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/select-api-permission.png" alt-text="Screenshot show the option to select permissions.":::

      > [!NOTE]
      >
      > * If an app isn't granted IT admin consent, users must provide consent the first time they use an app.
      > * Users need to consent to the API permissions only if the Microsoft Entra app is registered in a different tenant.

    [!INCLUDE [Application ID URI](includes/get-started/application-id-uri.md)]

    [!INCLUDE [Azure add scope](includes/get-started/azure-add-scope.md)]

    [!INCLUDE [Azure client application](includes/get-started/azure-client-application.md)]
      
- title: Create your bot 
  durationInMinutes: 5
  content: |

    [!INCLUDE [Azure bot resource](includes/get-started/azure-bot-resource.md)]    

    [!INCLUDE [Teams channel](includes/get-started/add-teams-channel.md)]

    [!INCLUDE [Messaging endpoint](includes/get-started/messaging-endpoint.md)]

- title: Set up bot service connection
  durationInMinutes: 1
  content: |
    Configure the bot to understand how to authenticate conversation bot in Teams, create the Teams app package, and upload it to the organization.
    
    1. Update the appsettings.json file in Visual Studio.
    1. Update the manifest.json file in Visual Studio and compress it to the zip file in the File Explorer.
    1. Run your solution in Visual Studio.
    1. Upload the bot to Teams.

    **To update appsettings**

    1. In the **File Explorer**, go to **Microsoft-Teams-Samples** > **samples** > **bot-conversation** > **csharp**.
    1. Open the **appsettings.json** file in Visual Studio and update the configuration for the bot.
   
        * Set `"MicrosoftAppType"`to **Multitenant**.
        * Set `"MicrosoftAppId"` to your bot's **Microsoft App ID**.
        * Set `"MicrosoftAppPassword"` to your bot's client secrets **Value**.
        * Set your `"MicrosoftAppTenantId"` to your tenant ID.

        :::image type="content" source="./assets/images/conversation-bot/appsettings-1.png" alt-text="Screenshot shows the Appsettings Json.":::

    1. Select **Save**.

    **To update manifest**

    1. In the **File Explorer**, go to **Microsoft-Teams-Samples** > **samples** > **bot-conversation** > **csharp** > **TeamsAppManifest**.
    
       :::image type="content" source="./assets/images/conversation-bot/manifest-file-location.png" alt-text="Screenshot shows the Manifest.":::

    1. Open the **manifest.json** file in Visual Studio and make the following changes:
       * Replace `"id"`and `"botId"` to your bot's **Microsoft App ID**.
       * Replace `"validDomains"` to your ngrok domain excluding `https://`.

        :::image type="content" source="./assets/images/conversation-bot/manifest1.png" alt-text="Screenshot shows the Manifest.":::

    1. Zip the contents of the **TeamsAppManifest** folder to create manifest.zip.
    
        > [!NOTE]
        > The `manifest.zip` must not contain any other folders in it. It must have `manifest json` source file, `color` icon, and `outline` icon inside the zip folder.
        > Run your solution in Visual Studio and upload your manifest in your demo tenant for organization or your Teams account.
    
    **To run solution in Visual Studio**

    1. Open Visual Studio.

    1. Select **File** > **Open** > **Project/Solution....**.

       ![Open file](~/assets/images/Tab-ME-SSO/open-project1.png)

    1. Go to **Microsoft-Teams-Samples** > **samples** > **bot-conversation** > **csharp**.

    1. Select **TeamsConversationBot.c#proj** file.

        :::image type="content" source="./assets/images/conversation-bot/project-file-location.png" alt-text="Screenshot shows the Visual Studio debug.":::

    1. Select **F5** to run the project.

    1. Select **Yes** to install the certificate.

       :::image type="content" source="./assets/images/conversation-bot/certificate.png" alt-text="Screenshot shows the Trust Certificate.":::
    
       A webpage appears with a message **Your bot is ready!**

       :::image type="content" source="./assets/images/conversation-bot/bot.png" alt-text="Screenshot shows the Bot ready screen.":::

    **To upload the app to Teams**

    1. In the Teams client, select the **Apps** icon.

    1. Select **Manage your apps**.

    1. Select **Upload an app**.

    1. Look for the option to **Upload a custom app**. If the option is visible, custom app upload is enabled.

        :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png" alt-text="Screenshot shows the option to upload a custom app." :::

        > [!NOTE]
        > Contact your Teams administrator, if you don't find the option to upload a custom app.
  
    1. Select **Open** to upload the .zip file that you created in the **TeamAppManifest** folder.
    
        :::image type="content" source="./assets/images/conversation-bot/upload-manifest-zip.png" alt-text="Screenshot shows the Manifest upload in Teams.":::

    1. Select **Add**.

       :::image type="content" source="./assets/images/conversation-bot/add-app-teams.png" alt-text="Screenshot shows the app added into Teams.":::

        You can interact with the bot.

- title: Interact with the conversation bot
  durationInMinutes: 2
  content: |
    You can interact with the bot in Teams by sending it a message, or selecting a command from the command list. The bot responds to the strings.

    In the left pane of the Teams, select More added apps (●●●), and then select your app from the list. The bot shows **Suggestions** as follows:
       * **MentionMe**
       * **Show Welcome**
       * **MessageAllMembers**
       * **MessageAllMembersUsingAadId**

    :::image type="content" source="./assets/images/conversation-bot/suggestions1.png" alt-text="Screenshot shows the Suggestions card.":::

    | MentionMe    | Show Welcome   | MessageAllMembers |
    | --- | --- | --- |
    | :::image type="content" source="./assets/images/conversation-bot/mentionme-new.png" alt-text="Screenshot shows the Mentionme card."lightbox="assets/images/conversation-bot/mentionme-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/show-welcome-new.png" alt-text="Screenshot shows the Welcome card."lightbox="assets/images/conversation-bot/show-welcome-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/message-all-members-new.png" alt-text="Screenshot shows the MessageAllMembers card."lightbox="assets/images/conversation-bot/message-all-members-new.png"::: |
    | **Result:** The bot responds to the message and mention the user. | **Result:** The bot sends the welcome card for you to interact with. |  **Result:** The bot sends a one-on-one message to each member in the current conversation. |
    | **Valid scopes:** personal, group chat, team chat. | **Valid scopes:** personal, group chat, team chat. |  **Valid scopes:** personal, group chat, team chat. |

    You can select an option from the command list by typing **@TeamsConversationBot** or **What can I do?** text in the compose area and send it.

    :::image type="content" source="./assets/images/conversation-bot/final-output-1.png" alt-text="Screenshot shows the response from conversation bot.":::

- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with something like this?

    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="Screenshot shows the response from conversation bot.":::
    
- content: |
    You've completed the tutorial to get started with conversation bot for Microsoft Teams.
